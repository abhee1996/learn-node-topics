Sequelize CLI [Node: 14.17.6, CLI: 6.4.1, ORM: 6.20.1]

sequelize <command>

Commands:
  sequelize db:migrate                        Run pending migrations
  sequelize db:migrate:schema:timestamps:add  Update migration table to have timestamps
  sequelize db:migrate:status                 List the status of all migrations
  sequelize db:migrate:undo                   Reverts a migration
  sequelize db:migrate:undo:all               Revert all migrations ran
  sequelize db:seed                           Run specified seeder
  sequelize db:seed:undo                      Deletes data from the database
  sequelize db:seed:all                       Run every seeder
  sequelize db:seed:undo:all                  Deletes data from the database
  sequelize db:create                         Create database specified by configuration
  sequelize db:drop                           Drop database specified by configuration
  sequelize init                              Initializes project
  sequelize init:config                       Initializes configuration
  sequelize init:migrations                   Initializes migrations
  sequelize init:models                       Initializes models
  sequelize init:seeders                      Initializes seeders
  sequelize migration:generate                Generates a new migration file
  sequelize migration:create                  Generates a new migration file
  sequelize model:generate                    Generates a model and its migration
  sequelize model:create                      Generates a model and its migration
  sequelize seed:generate                     Generates a new seed file
  sequelize seed:create                       Generates a new seed file

Options:
  --version  Show version number
/////////////////////////   /////////////////////      ////////////////////////          

//STACK OVERFLOW SOLUTION
https://stackoverflow.com/questions/21105748/sequelize-js-how-to-use-migrations-and-sync
//check Solution : Generating the "first migration"

Generating the "first migration"
In your case, the most reliable way is to do it almost manually. I would suggest to use sequelize-cli tool. The syntax is rather plain:

1 sequelize init
...
2 sequelize model:create --name User --attributes first_name:string,last_name:string,bio:text

3 sequelize db:migrate

This will create schema will migrations. You should do this only once to switch to proper process of schema developments (without sync:force, but with authoritative migrations).

Later, when you need to change schema:

->Create a migration: sequelize migration:create
->Write up and down functions in your migration file
->According to your changes in migration file, change your model manually
->Run 
    sequelize db:migrate

/////////////////////////////////////////////////////////////////////////
how-to-implement-many-to-many-association-in-sequelize
https://stackoverflow.com/questions/22958683/how-to-implement-many-to-many-association-in-sequelize